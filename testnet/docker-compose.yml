version: '3.8'

services:
  postgres:
    image: postgres:alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_DB: lumos
      POSTGRES_PASSWORD: password
    volumes:
      - ./data/cache/activity/postgres-data:/var/lib/postgresql/data
      - ./config/postgres_create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql

  redis:
    image: redis:bullseye
    user: redis:redis
    volumes:
      - ./data/cache/activity/redis-data:/data

  godwoken:
    image: ghcr.io/flouse/godwoken-prebuilds:v1.0.x-202203110200
    working_dir: /deploy
    restart: always
    volumes:
    - ./data/cache/chain-data/:/mnt/
    - ./config/godwoken-readonly-config.toml:/deploy/config.toml
    - ./config/db.toml:/deploy/db.toml:ro
    - ./config/block-producer-private-key.txt:/deploy/pk:ro
    ports:
      - 8119:8119 # rpc
      - 8120:8120 # err_receipt_ws_listen
    environment:
    - RUST_LOG=info
    command: godwoken
    ports:
      - 8119:8119
    depends_on:
      - postgres

  check-godwoken-started-successfully:
    image: ghcr.io/flouse/godwoken-prebuilds:v1.0.x-202203191257
    volumes:
      - ./config/check-godwoken-started.sh:/var/lib/layer2/check-godwoken-started.sh
    entrypoint: /var/lib/layer2/check-godwoken-started.sh
    depends_on:
      - godwoken
  

  web3:
    image: ghcr.io/nervosnetwork/godwoken-web3-prebuilds:compatibility-breaking-changes-1a52afb
    volumes: 
      - ./config/web3.env:/godwoken-web3/packages/api-server/.env
    working_dir: /godwoken-web3
    command: yarn workspace @godwoken-web3/api-server start
    ports:
      - 8024:8024
    depends_on: 
      - redis
      - postgres
      - godwoken

  web3-indexer:
    image: ghcr.io/nervosnetwork/godwoken-web3-indexer-prebuilds:compatibility-breaking-changes-94e2025
    restart: always
    volumes:
      - ./config/web3-indexer-config.toml:/var/lib/web3-indexer/indexer-config.toml
    working_dir: /var/lib/web3-indexer
    command: ["gw-web3-indexer"]
    depends_on: 
      web3:
        condition: service_started
      godwoken:
        condition: service_started
      check-godwoken-started-successfully:
        condition: service_completed_successfully
      postgres:
        condition: service_started
      redis:
        condition: service_started